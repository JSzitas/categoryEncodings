View(see)
source('C:/Users/juraj/git_hub/categoryEncodings/R/helmert_test.R')
View(see)
see <- encode_helmert(design_mat_1, 6)
View(see)
?usethis::use_badge()
?usethis::use_lifecycle_badge("stable")
usethis::use_lifecycle_badge("stable")
source('C:/Users/juraj/git_hub/categoryEncodings/R/encode_categories.R')
encode_categories(design_mat)
source('C:/Users/juraj/git_hub/categoryEncodings/R/encode_categories.R')
encode_categories(design_mat)
encode_categories(design_mat, Y = "X1")
source('C:/Users/juraj/git_hub/categoryEncodings/R/encode_categories.R')
encode_categories(design_mat, Y = "X1")
encode_categories(design_mat, Y = 1)
source('C:/Users/juraj/git_hub/categoryEncodings/R/encode_categories.R')
encode_categories(design_mat, Y = 1)
see <- encode_categories(design_mat, Y = 1)
View(see)
see <- encode_categories(design_mat, Y = 4)
see <- encode_categories(design_mat, Y = "X1")
source('C:/Users/juraj/git_hub/categoryEncodings/R/encode_categories.R')
see <- encode_categories(design_mat, Y = "X1")
View(see)
see <- encode_categories(design_mat, Y = "X5")
source('C:/Users/juraj/git_hub/categoryEncodings/R/encode_categories.R')
see <- encode_categories(design_mat, Y = "X5")
View(see)
source('C:/Users/juraj/git_hub/categoryEncodings/R/encode_categories.R')
View(see)
see <- encode_categories(design_mat, Y = "X5")
View(see)
source('C:/Users/juraj/git_hub/categoryEncodings/R/encode_categories.R')
see <- encode_categories(design_mat, Y = "X5")
View(see)
source('C:/Users/juraj/git_hub/categoryEncodings/R/encode_categories.R')
see <- encode_categories(design_mat, Y = "X5")
design_mat_1 <- cbind( data.frame(matrix(rnorm(5*100),ncol = 5)),
sample(sample(letters, 10), 100, replace = TRUE))
colnames(design_mat_1)[6] <- "few_letters"
design_mat_2 <- cbind( design_mat_1,
sample(sample(letters, 20), 100, replace = TRUE))
colnames(design_mat_2)[7] <- "many_letters"
design_mat_3 <- cbind( design_mat_2,
sample(sample(1:10, 5), 100, replace = TRUE))
colnames(design_mat_3)[8] <- "some_numbers"
design_mat_4 <- cbind( design_mat_3,
sample(sample(1:50, 35), 100, replace = TRUE ))
colnames(design_mat_4)[9] <- "many_numbers"
design_mat_4 <- cbind( design_mat_4,
sample(1:2, 100, replace = TRUE ))
colnames(design_mat_4)[10] <- "binary"
see <- encode_categories(design_mat_4)
source('C:/Users/juraj/git_hub/categoryEncodings/R/encode_categories.R')
source('C:/Users/juraj/git_hub/categoryEncodings/R/encode_categories.R')
see <- encode_categories(design_mat_4)
source('C:/Users/juraj/git_hub/categoryEncodings/R/encode_categories.R')
see <- encode_categories(design_mat_4)
source('C:/Users/juraj/git_hub/categoryEncodings/R/encode_categories.R')
see <- encode_categories(design_mat_4)
source('C:/Users/juraj/git_hub/categoryEncodings/R/encode_categories.R')
see <- encode_categories(design_mat_4)
source('C:/Users/juraj/git_hub/categoryEncodings/R/encode_categories.R')
see <- encode_categories(design_mat_4)
source('C:/Users/juraj/git_hub/categoryEncodings/R/encode_categories.R')
see <- encode_categories(design_mat_4)
source('C:/Users/juraj/git_hub/categoryEncodings/R/encode_categories.R')
see <- encode_categories(design_mat_4)
source('C:/Users/juraj/git_hub/categoryEncodings/R/encode_categories.R')
see <- encode_categories(design_mat_4)
source('C:/Users/juraj/git_hub/categoryEncodings/tests/testthat/test-encode_categories.R')
?testthat::expect_warning()
covr::codecov()
covr::package_coverage()
devtools::build()
devtools::document()
devtools::build()
install.packages("C:/Users/juraj/git_hub/categoryEncodings_1.0.tar.gz")
install.packages(repos = "C:/Users/juraj/git_hub/categoryEncodings_1.0.tar.gz")
?install.packages()
install.packages("C:/Users/juraj/git_hub/categoryEncodings_1.0.tar.gz", repos = NULL)
library(categoryEncodings)
?categoryEncodings::encode_categories()
?categoryEncodings::encode_dummy
setwd("C:/Users/juraj/Desktop/test/odpovedi2.csv")
library(tidyverse)
odpovede<-read.csv('odpovedi2.csv',sep = ";", dec = ",", row.names=NULL)
odpovede2 <- odpovede[,c(1:23, 25)]
odpovede2$podnikatel <- as.factor(odpovede2$podnikatel)
#setwd(choose.dir())
sapply(odpovede, class)
odpovede3 <- odpovede2[complete.cases(odpovede2),]
apply(odpovede3, 2, function(x)sum(is.na(x)))
odpovede3$podnikatel <- odpovede3$podnikatel %>% as.factor()
summary(odpovede)
library('randomForest')
library(ROCR)
devtools::install_github("JSzitas/categoryEncodings")
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
design_mat_1 <- cbind( data.frame(matrix(rnorm(5*100),ncol = 5)),
sample(sample(letters, 10), 100, replace = TRUE))
colnames(design_mat_1)[6] <- "few_letters"
encode_mean(design_mat_1, 6)
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
encode_mean(design_mat_1, 6)
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
encode_mean(design_mat_1, 6)
see <- encode_mean(design_mat_1, 6)
View(see)
see <- encode_mean(design_mat_1, 6, ignore = 5)
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
see <- encode_mean(design_mat_1, 6, ignore = 5)
View(see)
see <- encode_mean(design_mat_1, 6, ignore = c(4,5))
View(see)
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
see <- encode_mean(design_mat_1, 6, ignore = c(4,5))
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
see <- encode_mean(design_mat_1, 6, ignore = c(4,5))
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
see <- encode_mean(design_mat_1, 6, ignore = c(4,5))
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
see <- encode_mean(design_mat_1, 6, ignore = c(4,5))
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
see <- encode_mean(design_mat_1, 6, ignore = c(4,5))
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
see <- encode_mean(design_mat_1, 6, ignore = c(4,5))
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
see <- encode_mean(design_mat_1, 6, ignore = c(4,5))
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
see <- encode_mean(design_mat_1, 6, ignore = c(4,5))
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
see <- encode_mean(design_mat_1, 6, ignore = c(4,5))
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
see <- encode_mean(design_mat_1, 6, ignore = c(4,5))
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
see <- encode_mean(design_mat_1, 6, ignore = c(4,5))
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
see <- encode_mean(design_mat_1, 6, ignore = c(4,5))
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
see <- encode_mean(design_mat_1, 6, ignore = c(4,5))
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
see <- encode_mean(design_mat_1, 6, ignore = c(4,5))
see <- encode_mean(design_mat_1, 6, ignore = "X4","X5")
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
see <- encode_mean(design_mat_1, 6, ignore = "X4","X5")
see <- encode_mean(design_mat_1, 6, ignore = c("X4","X5"))
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
see <- encode_mean(design_mat_1, 6, ignore = c("X4","X5"))
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
see <- encode_mean(design_mat_1, 6, ignore = c("X4","X5"))
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
see <- encode_mean(design_mat_1, 6, ignore = c("X4","X5"))
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
encode_mean(design_mat_1, 6, ignor = 1)
encode_mean(design_mat_1, 6, ignore = 1)
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
encode_mean(design_mat_1, 6, ignore = 1)
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
encode_mean(design_mat_1, 6, ignore = 1)
encode_mean(design_mat_1, 6, ignore = "X1")
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
encode_mean(design_mat_1, 6, ignore = "X1")
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
encode_mean(design_mat_1, 6, ignore = "X1")
see <- encode_mean(design_mat_1, 6, ignore = "X1")
View(see)
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
View(see)
see <- encode_mean(design_mat_1, 6, ignore = "X1")
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
see <- encode_mean(design_mat_1, 6, ignore = "X1")
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
see <- encode_mean(design_mat_1, 6, ignore = "X1")
colnames(X)[!"factor_var"]
colnames(design_mat_1)[!"factor_var"]
colnames(design_mat_1) == "few_letters"
which(colnames(design_mat_1) == "few_letters")
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
see <- encode_mean(design_mat_1, 6, ignore = "X1")
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
see <- encode_mean(design_mat_1, 6, ignore = "X1")
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
see <- encode_mean(design_mat_1, 6, ignore = "X1")
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
see <- encode_mean(design_mat_1, 6, ignore = "X1")
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
see <- encode_mean(design_mat_1, 6, ignore = "X1")
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
see <- encode_mean(design_mat_1, 6, ignore = "X1")
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
see <- encode_mean(design_mat_1, 6, ignore = "X1")
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
see <- encode_mean(design_mat_1, 6, ignore = "X1")
source('C:/Users/juraj/git_hub/categoryEncodings/tests/testthat/test-encodings.R')
see <- encode_mean(design_mat, 6, ignore = 1)
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
see <- encode_mean(design_mat, 6, ignore = 1)
View(see)
View(design_mat)
setkeyv(design_mat, 6)
data.table::setkeyv(design_mat, 6)
data.table::setkeyv(data.table::as.data.table(design_mat), 6)
data.table::setkeyv(data.table::as.data.table(design_mat), "few_letters")
View(design_mat)
data.table::setkeyv(data.table::as.data.table(design_mat), "factor_var")
design_mat[,1:5]
identical(design_mat[,1:5], see[,1:5])
View(see)
encode_categories(design_mat)
see_2 <- encode_categories(design_mat)
View(see_2)
source('C:/Users/juraj/git_hub/categoryEncodings/R/encode_categories.R')
see_2 <- encode_categories(design_mat)
source('C:/Users/juraj/git_hub/categoryEncodings/R/encode_categories.R')
see_2 <- encode_categories(design_mat)
View(see_2)
see_2 <- encode_categories(design_mat, Y = "X1")
source('C:/Users/juraj/git_hub/categoryEncodings/R/encode_categories.R')
see_2 <- encode_categories(design_mat, Y = "X1")
View(see_2)
View(design_mat)
devtools::check()
devtools::document()
covr::codecov()
see <- encode_categories(design_mat_4)
View(design_mat_4)
see <- encode_categories(design_mat_2)
View(see)
see <- encode_categories(design_mat_4)
source('C:/Users/juraj/git_hub/categoryEncodings/tests/testthat/test-encode_categories.R')
?glmnet::glmnet()
contr.helmert()
rep(1:10, each = 10)
rep(1:10)
rep(1:10, each = 1)
rep(1:10, each = 2)
encode_helmert <- function(X, fact, keep_factor = FALSE, encoding_only = FALSE){
.. <- NULL
if(is.numeric(fact)){
fact <- colnames(X)[fact]
}
X <- data.table::data.table(X)
length_helm <- length(levels(X[,fact]))
helm <- diag(1:(length_helm - 1 ))
helm[upper.tri(helm)] <- -1
helm <- helm/rep( 1:length_helm,
each = length_helm )
helm <- helm[,-1]
colnames(helm) <-  paste( X[,fact],"_",
c((1:(ncol(helm)))),
"_helm", sep = "")
factor_var <- levels(as.factor(unlist(X[, .SD, .SDcols = fact])))
helm <- cbind( factor_var, helm )
colnames(helm)[1] <- fact
helm <- data.table::data.table(helm)
if(encoding_only == TRUE){
if(keep_factor == FALSE){
return(helm[,-1])
}
else{
return(helm)
}
}
X <- X[helm, on = fact]
if(keep_factor == FALSE){
X[,(fact) := NULL]
}
return(X)
}
set.seed(1071)
design_mat_1 <- cbind( data.frame(matrix(rnorm(5*100),ncol = 5)),
sample(sample(letters, 10), 100, replace = TRUE))
colnames(design_mat_1)[6] <- "few_letters"
encode_helmert(design_mat_1, fact = 6)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_helmert(design_mat_1, fact = 6)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_helmert(design_mat_1, fact = 6)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_helmert(design_mat_1, fact = 6)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_helmert(design_mat_1, fact = 6)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_helmert(design_mat_1, fact = 6)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_helmert(design_mat_1, fact = 6)
code_helmert <- function(n, contrasts = TRUE, sparse = FALSE) {
if (is.numeric(n) && length(n) == 1L) {
if (n > 1L)
levels <- .zf(seq_len(n))
else stop("not enough degrees of freedom to define contrasts")
}
else {
levels <- as.character(n)
n <- length(n)
}
if(!contrasts) {
B <- diag(n)
dimnames(B) <- list(1:n, levels)
if(sparse) B <- .asSparse(B)
return(B)
}
B <- diag(1:n - 1)
B[upper.tri(B)] <- -1
B  <- B/rep(1:n, each = n)
B <- B[, -1, drop = FALSE]
dimnames(B) <- list(1:n,
paste0("H", .zf(2:n)))
if(sparse){
.asSparse(B)
} else {
B
}
}
code_helmert(10)
code_helmert <- function(n) {
B <- diag(1:n - 1)
B[upper.tri(B)] <- -1
B  <- B/rep(1:n, each = n)
B <- B[, -1, drop = FALSE]
dimnames(B) <- list(1:n,
paste0("H", .zf(2:n)))
}
code_helmert(10)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
code_helmert(10)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
code_helmert(10)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
code_helmert(10)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
code_helmert(10)
code_helmert(10)
encode_helmert(design_mat_1, fact = 6)
helm <- diag(1:length_helm ) - 1
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_helmert(design_mat_1, fact = 6)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_helmert(design_mat_1, fact = 6)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_helmert(design_mat_1, fact = 6)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_helmert(design_mat_1, fact = 6)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_helmert(design_mat_1, fact = 6)
see <- encode_helmert(design_mat_1, fact = 6)
View(see)
?switch (object,
case = action
)
source('C:/Users/juraj/git_hub/categoryEncodings/R/encodings.R')
col(matrix(0,10,10))
source('C:/Users/juraj/Desktop/alternative_encodings.R')
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_difference(design_mat_1, 6)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_difference(design_mat_1, 6)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_difference(design_mat_1, 6)
View(design_mat_1)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_difference(design_mat_1, 6)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_difference(design_mat_1, 6)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_difference(design_mat_1, 6)
encode_difference(design_mat_1)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_difference(design_mat_1)
encode_difference(design_mat_1, 6)
View(encode_difference)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_difference(design_mat_1, 6)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_difference(design_mat_1, 6)
encode_difference(design_mat_1, 6, encoding_only = TRUE)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_difference(design_mat_1, 6, encoding_only = TRUE)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_difference(design_mat_1, 6, encoding_only = TRUE)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_difference(design_mat_1, 6, encoding_only = TRUE)
encode_difference(design_mat_1, 6)
see <- encode_difference(design_mat_1, 6)
View(see)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
see <- encode_simple_effect(design_mat_1, 6)
View(see)
View(see)
<aggregate
Maggregate
?aggregate
source('C:/Users/juraj/Desktop/alternative_encodings.R')
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_mnl(design_mat_1,6)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_mnl(design_mat_1,6)
see <- encode_mnl(design_mat_1,6)
see <- encode_mnl(design_mat_3,6)
see <- encode_mnl(design_mat_1,6)
design_mat_1 <- cbind( data.frame(matrix(rnorm(5*1000),ncol = 5)),
sample(sample(letters, 10), 1000, replace = TRUE))
colnames(design_mat_1)[6] <- "few_letters"
see <- encode_mnl(design_mat_1,6)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
see <- encode_mnl(design_mat_1,6)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
see <- encode_mnl(design_mat_1,6)
design_mat_1 <- cbind( data.frame(matrix(rnorm(5*100),ncol = 5)),
sample(sample(letters, 10), 100, replace = TRUE))
colnames(design_mat_1)[6] <- "few_letters"
see <- encode_mnl(design_mat_1,6)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
see <- encode_mnl(design_mat_1,6)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
see <- encode_mnl(design_mat_1,6)
View(see)
coef(see)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
see <- encode_mnl(design_mat_1,6)
View(see)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
see <- encode_mnl(design_mat_1,6)
View(see)
coef_mat <- as.data.frame(lapply(see, as.matrix))
CM <- t(as.matrix(coef_mat))
CM
CM <- t(as.matrix(as.data.frame(lapply(see, as.matrix))))
source('C:/Users/juraj/Desktop/alternative_encodings.R')
see <- encode_mnl(design_mat_1,6)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
see <- encode_mnl(design_mat_1,6)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
see <- encode_mnl(design_mat_1,6)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
see <- encode_mnl(design_mat_1,6)
View(see)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
see <- encode_mnl(design_mat_1,6)
View(see)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
see <- encode_mnl(design_mat_1,6)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
see <- encode_mnl(design_mat_1,6)
View(see)
aggregate(design_mat_1, 6, mean)
aggregate(design_mat_1, by = list(6), mean)
aggregate(design_mat_1, by = list(colnames(design_mat_1)[6]), mean)
View(design_mat)
View(design_mat_1)
design_mat_1 <- cbind( data.frame(matrix(rnorm(5*100),ncol = 5)),
sample(sample(letters, 10), 100, replace = TRUE))
colnames(design_mat_1)[6] <- "few_letters"
aggregate(design_mat_1, by = list("few_letters"), mean)
aggregate(design_mat_1, by = list(few_letters = "few_letters"), mean)
aggregate(design_mat_1, by = list(letters = few_letters), mean)
aggregate(design_mat_1, by = list(few_letters), mean)
View(design_mat_1)
aggregate(data.frame(design_mat_1), by = list(few_letters), mean)
fisher_encode(G = list(few_letters), Y = design_mat_1)
fisher_encode(G = list(few_letters = a), Y = design_mat_1)
fisher_encode(G = list(few_letters = "a"), Y = design_mat_1)
?rank()
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_fisher(design_mat_1, few_letters)
encode_fisher(design_mat_1, "few_letters")
rank(encode_fisher(design_mat_1, "few_letters"))
rank(encode_fisher(design_mat_1, "few_letters")[,2:6])
unique(encode_fisher(design_mat_1, "few_letters")[,1])
fisher_encode(G = list(few_letters), Y = design_mat_1[,2])
fisher_encode(G = list(few_letters), Y = design_mat_1[,2,6])
fisher_encode(G = list(few_letters), Y = design_mat_1[,c(2,6)])
fisher_encode(G = list("few_letters"), Y = design_mat_1[,c(2,6)])
fisher_encode(G = list(few_letters), Y = design_mat_1[,c(2,6)])
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_fisher(design_mat_1, "few_letters")
source('C:/Users/juraj/Desktop/alternative_encodings.R')
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_fisher(design_mat_1, "few_letters")
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_fisher(design_mat_1, "few_letters")
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_fisher(design_mat_1, "few_letters")
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_fisher(design_mat_1, "few_letters")
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_fisher(design_mat_1, "few_letters")
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_fisher(design_mat_1, "few_letters")
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_fisher(design_mat_1, "few_letters")
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_fisher(design_mat_1, "few_letters")
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_fisher(design_mat_1, "few_letters")
see <- encode_fisher(design_mat_1, "few_letters")
View(see)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
see <- encode_fisher(design_mat_1, "few_letters")
View(see)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
see <- encode_fisher(design_mat_1, "few_letters")
View(see)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
see <- encode_fisher(design_mat_1, "few_letters")
View(see)
source('C:/Users/juraj/Desktop/alternative_encodings.R')
encode_repeated_effect(design_mat_1, 6)
repeated_effect_encode(10)
