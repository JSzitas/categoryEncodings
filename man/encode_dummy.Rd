% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/encode_dummy.R
\name{encode_dummy}
\alias{encode_dummy}
\title{Encode a given factor variable using dummy variables}
\usage{
encode_dummy(
  X,
  fact,
  keep_factor = FALSE,
  encoding_only = FALSE,
  use_reference = TRUE,
  reference_value = 0
)
}
\arguments{
\item{X}{The data.frame/data.table to transform.}

\item{fact}{The factor variable to encode by - either a positive integer specifying the 
column number, or the name of the column.}

\item{keep_factor}{Whether to keep the original factor column(defaults to **FALSE**).}

\item{encoding_only}{Whether to return the full transformed dataset or only the new 
columns. Defaults to FALSE and returns the full dataset.}

\item{use_reference}{Whether to include a reference level (i.e. whether the new encoding contains an **intercept-like** constant term). 
Defaults to **TRUE**.}

\item{reference_value}{What the reference value should be if **use_reference** is set to **TRUE**. Defaults to 0.}
}
\value{
A new data.table X which contains the new columns and optionally the old factor.
}
\description{
Transforms the original design matrix using a dummy variable encoding.
}
\details{
The basic dummy variable encoding, with reference class level set to 0. 
The reference class is always the first class observed.
}
\examples{

design_mat <- cbind( data.frame( matrix(rnorm(5*100),ncol = 5) ),
                     sample( sample(letters, 10), 100, replace = TRUE)
                     )
colnames(design_mat)[6] <- "factor_var"

encode_dummy(X = design_mat, fact = "factor_var", keep_factor = FALSE)

}
